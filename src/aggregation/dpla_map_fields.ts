export enum DataFieldType {
  TextField,
  URLField,
  DateField,
  DisabledField,
  WildcardField,
}

interface DataField {
  name: string;
  fieldType: DataFieldType;
  searchable: boolean;
  facetable: boolean;
  sortable: boolean;
  elasticSearchDefault: string;
  elasticSearchNotAnalyzed?: string;
}

/*
 * Holds information about DPLA MAP fields and their equivalents in
 * ElasticSearch.
 * Fields must be defined in order to make them searchable, facetable,
 * sortable, or usable in a "fields=..." query.
 * Fields will appear in the search/fetch results doc body whether or not they
 * are defined here.
 */

export const fields: DataField[] = [
  {
    name: "@context",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "@context",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "@id",
    fieldType: DataFieldType.URLField,
    searchable: false,
    facetable: false,
    sortable: true,
    elasticSearchDefault: "@id",
    elasticSearchNotAnalyzed: "@id",
  },
  {
    name: "admin.contributingInstitution",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "admin.contributingInstitution",
    elasticSearchNotAnalyzed: "admin.contributingInstitution",
  },
  {
    name: "aggregatedCHO",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "aggregatedCHO",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "dataProvider",
    fieldType: DataFieldType.WildcardField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "dataProvider.*",
    elasticSearchNotAnalyzed: "dataProvider.name.not_analyzed",
  },
  {
    name: "dataProvider.@id",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "dataProvider.@id",
    elasticSearchNotAnalyzed: "dataProvider.@id",
  },
  {
    name: "dataProvider.exactMatch",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "dataProvider.exactMatch",
    elasticSearchNotAnalyzed: "dataProvider.exactMatch",
  },
  {
    name: "dataProvider.name",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "dataProvider.name",
    elasticSearchNotAnalyzed: "dataProvider.name.not_analyzed",
  },
  {
    name: "hasView.@id",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "hasView.@id",
    elasticSearchNotAnalyzed: "hasView.@id",
  },
  {
    name: "hasView.edmRights",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "hasView.edmRights",
    elasticSearchNotAnalyzed: "hasView.edmRights.not_analyzed",
  },
  {
    name: "hasView.format",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "hasView.format",
    elasticSearchNotAnalyzed: "hasView.format",
  },
  {
    name: "hasView.rights",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "hasView.rights",
    elasticSearchNotAnalyzed: "hasView.rights",
  },
  {
    name: "id",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: true,
    elasticSearchDefault: "id",
    elasticSearchNotAnalyzed: "id",
  },
  {
    name: "iiifManifest",
    fieldType: DataFieldType.URLField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "iiifManifest",
    elasticSearchNotAnalyzed: "iiifManifest",
  },
  {
    name: "ingestDate",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "ingestDate",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "ingestType",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "ingestType",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "ingestSequence",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "ingestSequence",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "intermediateProvider",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "intermediateProvider",
    elasticSearchNotAnalyzed: "intermediateProvider.not_analyzed",
  },
  {
    name: "isPartOf.@id",
    fieldType: DataFieldType.URLField,
    searchable: false,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "isPartOf.@id",
    elasticSearchNotAnalyzed: "isPartOf.@id",
  },
  {
    name: "isPartOf.name",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "isPartOf.name",
    elasticSearchNotAnalyzed: "isPartOf.name.not_analyzed",
  },
  {
    name: "isShownAt",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: false,
    sortable: true,
    elasticSearchDefault: "isShownAt",
    elasticSearchNotAnalyzed: "isShownAt",
  },
  {
    name: "mediaMaster",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "mediaMaster",
    elasticSearchNotAnalyzed: "mediaMaster",
  },
  {
    name: "object",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: false,
    sortable: true,
    elasticSearchDefault: "object",
    elasticSearchNotAnalyzed: "object",
  },
  {
    name: "originalRecord",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "originalRecord",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "provider",
    fieldType: DataFieldType.WildcardField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "provider.*",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "provider.@id",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "provider.@id",
    elasticSearchNotAnalyzed: "provider.@id",
  },
  {
    name: "provider.exactMatch",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "provider.exactMatch",
    elasticSearchNotAnalyzed: "provider.exactMatch",
  },
  {
    name: "provider.name",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "provider.name",
    elasticSearchNotAnalyzed: "provider.name.not_analyzed",
  },
  {
    name: "rights",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "rights",
    elasticSearchNotAnalyzed: "rights",
  },
  {
    name: "rightsCategory",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "rightsCategory",
    elasticSearchNotAnalyzed: "rightsCategory",
  },
  {
    name: "tags",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "tags",
    elasticSearchNotAnalyzed: "tags",
  },
  {
    name: "sourceResource.@id",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.@id",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.collection.@id",
    fieldType: DataFieldType.URLField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.collection.@id",
    elasticSearchNotAnalyzed: "sourceResource.collection.@id",
  },
  {
    name: "sourceResource.collection.id",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.collection.id",
    elasticSearchNotAnalyzed: "sourceResource.collection.id",
  },
  {
    name: "sourceResource.collection.description",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.collection.description",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.collection.title",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "sourceResource.collection.title",
    elasticSearchNotAnalyzed: "sourceResource.collection.title.not_analyzed",
  },
  {
    name: "sourceResource.contributor",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.contributor",
    elasticSearchNotAnalyzed: "sourceResource.contributor",
  },
  {
    name: "sourceResource.creator",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.creator",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.date",
    fieldType: DataFieldType.WildcardField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.*",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.date.after",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.end",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.date.before",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.begin",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.date.begin",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.date.begin",
    elasticSearchNotAnalyzed: "sourceResource.date.begin.not_analyzed",
  },
  {
    name: "sourceResource.date.begin.month",
    fieldType: DataFieldType.DateField,
    searchable: false,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.begin",
    elasticSearchNotAnalyzed: "sourceResource.date.begin.not_analyzed",
  },
  {
    name: "sourceResource.date.begin.year",
    fieldType: DataFieldType.DateField,
    searchable: false,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.begin",
    elasticSearchNotAnalyzed: "sourceResource.date.begin.not_analyzed",
  },
  {
    name: "sourceResource.date.displayDate",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.displayDate",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.date.end",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.date.end",
    elasticSearchNotAnalyzed: "sourceResource.date.end.not_analyzed",
  },
  {
    name: "sourceResource.date.end.month",
    fieldType: DataFieldType.DateField,
    searchable: false,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.end",
    elasticSearchNotAnalyzed: "sourceResource.date.end.not_analyzed",
  },
  {
    name: "sourceResource.date.end.year",
    fieldType: DataFieldType.DateField,
    searchable: false,
    facetable: true,
    sortable: false,
    elasticSearchDefault: "sourceResource.date.end",
    elasticSearchNotAnalyzed: "sourceResource.date.end.not_analyzed",
  },
  {
    name: "sourceResource.description",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.description",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.extent",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: true,
    elasticSearchDefault: "sourceResource.extent",
    elasticSearchNotAnalyzed: "sourceResource.extent",
  },
  {
    name: "sourceResource.format",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.format",
    elasticSearchNotAnalyzed: "sourceResource.format",
  },
  {
    name: "sourceResource.genre",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.genre",
    elasticSearchNotAnalyzed: "sourceResource.genre",
  },
  {
    name: "sourceResource.identifier",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.identifier",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "isPartOf",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "isPartOf",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.language.iso639_3",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.language.iso639_3",
    elasticSearchNotAnalyzed: "sourceResource.language.iso639_3",
  },
  {
    name: "sourceResource.language.name",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.language.name",
    elasticSearchNotAnalyzed: "sourceResource.language.name.not_analyzed",
  },
  {
    name: "sourceResource.publisher",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.publisher",
    elasticSearchNotAnalyzed: "sourceResource.publisher.not_analyzed",
  },
  {
    name: "sourceResource.relation",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.relation",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.rights",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.rights",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.spatial",
    fieldType: DataFieldType.WildcardField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.spatial.*",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.spatial.city",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.city",
    elasticSearchNotAnalyzed: "sourceResource.spatial.city.not_analyzed",
  },
  {
    name: "sourceResource.spatial.coordinates",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.coordinates",
    elasticSearchNotAnalyzed: "sourceResource.spatial.coordinates",
  },
  {
    name: "sourceResource.spatial.country",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.country",
    elasticSearchNotAnalyzed: "sourceResource.spatial.country.not_analyzed",
  },
  {
    name: "sourceResource.spatial.county",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.county",
    elasticSearchNotAnalyzed: "sourceResource.spatial.county.not_analyzed",
  },
  {
    name: "sourceResource.spatial.iso3166-2",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.spatial.iso3166-2",
    elasticSearchNotAnalyzed: "sourceResource.spatial.iso3166-2",
  },
  {
    name: "sourceResource.spatial.name",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.name",
    elasticSearchNotAnalyzed: "sourceResource.spatial.name.not_analyzed",
  },
  {
    name: "sourceResource.spatial.region",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.region",
    elasticSearchNotAnalyzed: "sourceResource.spatial.region.not_analyzed",
  },
  {
    name: "sourceResource.spatial.state",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.spatial.state",
    elasticSearchNotAnalyzed: "sourceResource.spatial.state.not_analyzed",
  },
  {
    name: "sourceResource.specType",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.relation",
    elasticSearchNotAnalyzed: "sourceResource.specType",
  },
  {
    name: "sourceResource.stateLocatedIn",
    fieldType: DataFieldType.DisabledField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.stateLocatedIn",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.subject.@id",
    fieldType: DataFieldType.URLField,
    searchable: false,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.subject.@id",
    elasticSearchNotAnalyzed: "sourceResource.subject.@id",
  },
  {
    name: "sourceResource.subject.@type",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.subject.@type",
    elasticSearchNotAnalyzed: "sourceResource.subject.@type",
  },
  {
    name: "sourceResource.subject.name",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.subject.name",
    elasticSearchNotAnalyzed: "sourceResource.subject.name.not_analyzed",
  },
  {
    name: "sourceResource.subject.scheme",
    fieldType: DataFieldType.TextField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.subject.scheme",
    elasticSearchNotAnalyzed: "sourceResource.subject.scheme.not_analyzed",
  },
  {
    name: "sourceResource.subtitle",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.subtitle",
    elasticSearchNotAnalyzed: "sourceResource.subtitle.not_analyzed",
  },
  {
    name: "sourceResource.temporal",
    fieldType: DataFieldType.WildcardField,
    searchable: false,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.temporal.*",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.temporal.after",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.temporal.end",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.temporal.before",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: false,
    sortable: false,
    elasticSearchDefault: "sourceResource.temporal.begin",
    elasticSearchNotAnalyzed: undefined,
  },
  {
    name: "sourceResource.temporal.begin",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.temporal.begin",
    elasticSearchNotAnalyzed: "sourceResource.temporal.begin.not_analyzed",
  },
  {
    name: "sourceResource.temporal.end",
    fieldType: DataFieldType.DateField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.temporal.end",
    elasticSearchNotAnalyzed: "sourceResource.temporal.end.not_analyzed",
  },
  {
    name: "sourceResource.title",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.title",
    elasticSearchNotAnalyzed: "sourceResource.title.not_analyzed",
  },
  {
    name: "sourceResource.type",
    fieldType: DataFieldType.TextField,
    searchable: true,
    facetable: true,
    sortable: true,
    elasticSearchDefault: "sourceResource.type",
    elasticSearchNotAnalyzed: "sourceResource.type",
  },
];

export const coordinatesField: DataField = fields.find(
  (field) => field.name === "sourceResource.spatial.coordinates",
) as DataField;

export const dateFields: DataField[] = fields.filter(
  (field) => field.fieldType === DataFieldType.DateField,
);

export const allDataFields: string[] = fields.map((field) => field.name);

export const searchableDataFields: string[] = fields
  .filter((field) => field.searchable)
  .map((field) => field.name);

export const facetableDataFields: string[] = fields
  .filter((field) => field.facetable)
  .filter((field) => field.elasticSearchNotAnalyzed !== undefined)
  .map((field) => field.name);

export const sortableDataFields: string[] = fields
  .filter((field) => field.sortable)
  .filter((field) => field.elasticSearchNotAnalyzed !== undefined)
  .map((field) => field.name);

export function getElasticSearchField(name: string): string | undefined {
  const field = fields.find((field) => field.name === name);
  return field?.elasticSearchDefault;
}

export function getElasticSearchNotAnalyzed(name: string): string | undefined {
  const field = fields.find((field) => field.name === name);
  return field?.elasticSearchNotAnalyzed;
}

/*
 * Map data field to ElasticSearch non-analyzed field.
 * If a field is only indexed as analyzed (text), then return analyzed field.
 * Used for exact field matches and facets.
 */
export function getElasticSearchExactMatchField(
  name: string,
): string | undefined {
  const field = fields.find((field) => field.name === name);
  return field?.elasticSearchNotAnalyzed || field?.elasticSearchDefault;
}

export function getDataFieldType(name: string): DataFieldType | undefined {
  const field = fields.find((field) => field.name === name);
  return field?.fieldType;
}

export const acceptedSearchParams: string[] = [
  ...searchableDataFields,
  "exact_field_match",
  "facets",
  "facet_size",
  "fields",
  "filter",
  "op",
  "page",
  "page_size",
  "q",
  "sort_by",
  "sort_by_pin",
  "sort_order",
];

// These fields are not valid for search, sort, filter, & facets.
// Rather than returning an error, they should be ignored.
const ignoredFields: string[] = ["sourceResource.subtitle"];
